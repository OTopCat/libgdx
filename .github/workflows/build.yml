name: SonarQube Desktop-only

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  desktop-sonar:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: '17'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Cache SonarQube
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Create desktop-only settings
        run: |
          cat > settings-ci.gradle.kts <<'EOF'
          rootProject.name = "libgdx-desktop-ci"
          include(":gdx")
          include(":backends:gdx-backend-lwjgl3")
          # add any other non-Android modules you want:
          # include(":backends:gdx-backend-headless")
          # include(":extensions:gdx-tools")
          EOF

      - name: Build
        run: ./gradlew -c settings-ci.gradle.kts -PskipPublishGradle=true build --warning-mode all --info

      - name: SonarQube analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  # if self-hosted
        run: |
          ./gradlew -c settings-ci.gradle.kts -PskipPublishGradle=true sonar \
            -Dsonar.login=${SONAR_TOKEN} \
            ${{ secrets.SONAR_HOST_URL && format('-Dsonar.host.url={0}', secrets.SONAR_HOST_URL) || '' }}
