name: SonarQube Build & Analyze

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build-and-analyze:
    name: Build and analyze
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # better PR analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      # --- Android only (safe to keep for LibGDX; remove if not needed) ---
      - name: Install Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept licenses & install build tools
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platforms;android-35" "build-tools;34.0.0"
      # --------------------------------------------------------------------

      - name: Make Gradle executable
        run: chmod +x gradlew

      # Build first (scanner no longer auto-hooks these tasks)
      - name: Build
        run: ./gradlew build --warning-mode all --info

      - name: SonarQube analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # If you use a self-hosted SonarQube server, set SONAR_HOST_URL as a secret or env:
          # SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          ./gradlew sonar \
            -Dsonar.login=${SONAR_TOKEN} \
            ${{ secrets.SONAR_HOST_URL && format('-Dsonar.host.url={0}', secrets.SONAR_HOST_URL) || '' }}
